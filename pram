#!/usr/bin/env bash
# (c) 2019 Michał Górny
# Released under the terms of the 2-clause BSD license

VERSION=0.9

die() {
	echo "${@}" >&2
	exit 1
}

print_usage() {
	echo "Usage: ${0} [<options>] <pr-number/pr-url>..."
}

print_help() {
	print_usage
	echo
	echo "Merge specified GitHub PR(s) into the repository in current directory."
	echo
	echo "Options:"
	echo "  -e EDITOR, --editor EDITOR"
	echo "                   Override the editor used (default: \${EDITOR})"
	echo "  -r REPO, --repository REPO"
	echo "                   GitHub repo to use (default: gentoo/gentoo)"
	echo "  -s, --signoff    Add Signed-off-by to commits (the default)"
	echo "  -S, --no-signoff Disable adding Signed-off-by to commits"
	echo
	echo "Parameters:"
	echo "  <pr-number>      GitHub PR number"
	echo "  <pr-url>         Full URL to the pull request"
}

main() {
	local editor=${EDITOR:-vim}
	local prs=()
	local repo=gentoo/gentoo
	local signoff=1

	while [[ ${#} -gt 0 ]]; do
		case ${1} in
			-h|--help)
				print_help
				exit 0
				;;
			-V|--version)
				echo "pram ${VERSION}"
				exit 0
				;;
			-e|--editor)
				[[ ${#} -gt 1 ]] || die "${0}: missing argument to ${1}"
				editor=${2}
				shift
				;;
			-e*)
				editor=${1#-e}
				;;
			--editor=*)
				editor=${1#*=}
				;;
			-r|--repository)
				[[ ${#} -gt 1 ]] || die "${0}: missing argument to ${1}"
				repo=${2}
				shift
				;;
			-r*)
				repo=${1#-r}
				;;
			--repository=*)
				repo=${1#*=}
				;;
			-s|--signoff)
				signoff=1
				;;
			-S|--no-signoff)
				signoff=
				;;
			-*)
				print_usage >&2
				exit 1
				;;
			*://*) # full URL (possibly with .patch suffix)
				prs+=( "${1%.patch}" )
				;;
			[0-9]*) # a number?
				prs+=( "https://github.com/${repo}/pull/${1}" )
				;;
		esac

		shift
	done

	if [[ -z ${prs[@]} ]]; then
		print_usage >&2
		exit 1
	fi

	if [[ $(git rev-parse --is-inside-work-tree) != true ]]; then
		echo "pram needs to be run inside the git checkout!" >&2
		exit 1
	fi

	tempdir=$(mktemp -d) || die "Unable to create a temporary directory"
	trap 'rm -r -f "${tempdir}"' EXIT

	local pr
	for pr in "${prs[@]}"; do
		wget -O "${tempdir}/all.patch" "${pr}.patch" || die "Fetching patch failed"
		git mailsplit -o"${tempdir}" "${tempdir}/all.patch" >/dev/null ||
			die "Splitting patches failed"

		if [[ ${signoff} ]]; then
			local f
			for f in "${tempdir}"/[0-9]*; do
				if ! grep -q '^Signed-off-by:' "${f}"; then
					die "Commit no. ${f##*/} was not signed off by the author!"
				fi
			done
		fi

		${editor} "${tempdir}/all.patch" || die "Starting editor failed"

		git am ${signoff:+-s} "${tempdir}/all.patch" || die "git am failed"
	done
}

main "${@}"
